.App {
  text-align: center;
}

.App-header {
  background-color: #d4397a;
  min-height: 20vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: 2.5rem;
  color: white;
  letter-spacing: 2px;
  font-family: 'Lobster Two', cursive;
}

.userForm {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

form {
  width: 50%;
  margin: 50px;
  display: flex;
  flex-direction: column;
  background: #d4397a;
  padding: 20px;
  border-radius: 15px;
}

h2 {
  font-size: 2rem;
  color: white;
  letter-spacing: 2px;
  font-family: 'Lobster Two', cursive;
  font-weight: normal;
}

input {
  font-size: 1rem;
  font-family: 'Quattrocento', serif;
  border: 2px solid black;
  border-radius: 5px;
  margin-bottom: 10px;
  padding: 3px;
}

.warning {
  font-size: 1.25rem;
  font-family: 'Quattrocento', serif;
  margin: 10px;
  padding: 3px;
  color: #ffeb3b;
  font-weight: bolder;
  text-transform: uppercase;
}

.selectRoleContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.selectRole {
  display: flex;
  justify-content: center;
}

.selectRole p {
  font-size: 1rem;
  font-family: 'Quattrocento', serif;
  margin: 10px;
  padding: 3px;
  font-weight: bolder;
}

select {
  font-size: 1rem;
  font-family: 'Quattrocento', serif;
  border: 2px solid black;
  border-radius: 5px;
  margin: 10px;
  padding: 3px;
}

.checkboxContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.checkbox {
  display: flex;
  justify-content: center;
  align-items: center;
}

.checkbox p {
  font-size: 1rem;
  font-family: 'Quattrocento', serif;
  margin: 10px;
  padding: 3px;
  font-weight: bolder;
}

button {
  width: 20%;
  margin-left: 40%;
  margin-right: 40%;
  margin-bottom: 20px;
  margin-top: 10px;
  font-size: 1rem;
  font-family: 'Quattrocento', serif;
  border: 2px solid black;
  border-radius: 5px;
  padding: 3px;
  font-weight: bolder;
  text-transform: uppercase;
}

button:hover {
  font-size: 1.1rem;
  background: white;
  color: #d4397a;
  border: 2px solid #ffa4c5;
}

.user-display {
  width: 50%;
  margin: 50px;
  display: flex;
  flex-direction: column;
  background: #d4397a;
  padding: 20px;
  border-radius: 15px;
}

.user-display p {
  font-size: 1.1rem;
  font-family: 'Quattrocento', serif;
  margin-bottom: 10px;
  padding: 3px;
  font-weight: bolder;
}
/* label {
  font-size: 1rem;
  font-family: 'Quattrocento', serif;
  margin: 10px;
  padding: 3px;
  color: #B4886B; font-weight: bold; display: block; width: 150px; float: left; 
} */

/* font-family: 'Lobster Two', cursive;
font-family: 'Quattrocento', serif; */


/* <div className="userForm">
<Form >
  <div>
    {touched.name && errors.name && <p className="warning">{errors.name}</p>}
    <Field type="text" name="name" placeholder="Full Name"/>
  </div>
  <div>
    {touched.email && errors.email && <p className="warning">{errors.email}</p>} 
    <Field type="email" name="email" placeholder="Email"/>
  </div>
  <div>
    {touched.password && errors.password &&<p className="warning">{errors.password}</p>}
    <Field type="password" name="password" placeholder="Create Password"/>
  </div>
          <div className="selectRole">
            {touched.role && errors.role &&<p className="warning">{errors.role}</p>}
            <label htmlFor="role">
            <p>Please select the type of user:</p>
            </label>
            <Field component="select" name="role">
                <option value="Select">Select</option>
                <option value="Camper">Camper</option>
                <option value="Parent">Parent</option>
                <option value="Camp Leader">Camp Leader</option>
                <option value="School Coach">School Coach</option>
            </Field> 
        </div>
        <div className="checkbox">
            {touched.tos && errors.tos &&<p className="warning">{errors.tos}</p>}
            <label htmlFor="tos">
            Accept Terms of Service:
            </label>
            <Field type="checkbox" name="tos" id="tos" checked={values.tos} />
        </div>
  <button type="submit">Submit!</button>
</Form>

{======RENDER DATA TO SCREEN=========== */
/* {users.map((user, index) => {
  return (
    <div className="user-display" key={index}>
      <h3>Your Submission</h3>
      <p>Name: {user.name} </p>
      <p>Email: {user.email}</p>
      <p>Password: {user.password}</p>
      <p>Role: {user.role}</p>
    </div>
  )
})} */
/* ======END RENDER DATA TO SCREEN=========== */

/* </div> */